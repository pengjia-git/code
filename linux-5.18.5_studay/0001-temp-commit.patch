From 8d1edb8d252f5c00f0332125b3615819898d9c75 Mon Sep 17 00:00:00 2001
From: jia <1730548875@qq.com>
Date: Wed, 2 Nov 2022 23:47:06 +0800
Subject: [PATCH] temp commit

---
 drivers/rtc/sysfs.c        | 41 ++++++++++++++++++++++++++++++++++++++
 include/linux/radix-tree.h |  1 +
 lib/radix-tree.c           |  2 ++
 3 files changed, 44 insertions(+)

diff --git a/drivers/rtc/sysfs.c b/drivers/rtc/sysfs.c
index 00f1945bc..3b7573088 100644
--- a/drivers/rtc/sysfs.c
+++ b/drivers/rtc/sysfs.c
@@ -8,6 +8,7 @@
 
 #include <linux/module.h>
 #include <linux/rtc.h>
+#include <linux/idr.h>
 
 #include "rtc-core.h"
 
@@ -250,6 +251,45 @@ range_show(struct device *dev, struct device_attribute *attr, char *buf)
 }
 static DEVICE_ATTR_RO(range);
 
+
+/*just for test radix*/
+static DEFINE_IDR(radix_test_idr);
+static char * radix_test_string="radix test";
+int radix_test_pj=0;
+static ssize_t
+radix_show(struct device *dev, struct device_attribute *attr, char *buf)
+{
+	ssize_t retval;
+	struct xa_node *p;
+	char *str;
+	p=(struct xa_node*)radix_test_idr.idr_rt.xa_head;
+	printk("p=%p\n",p);
+	printk("shift=%d,offset=%d,count=%d,nr_values=%d\n",p->shift,p->offset,p->count,p->nr_values);
+	//str=(char *)p->slots[0];
+	//printk("str=%pradix_test_string=%p\n",p->slots[0],radix_test_string);
+	retval = sprintf(buf, "radix tree test\n");
+	return retval;
+}
+
+static ssize_t
+radix_store(struct device *dev, struct device_attribute *attr,
+	     const char *buf, size_t n)
+{
+	ssize_t retval;
+	long offset;
+	int err,i;
+	retval = kstrtol(buf, 10, &offset);
+	printk("offset=%ld\n",offset);
+	for(i=0;i<offset;i++){
+		radix_test_pj=1;
+		err = idr_alloc(&radix_test_idr, radix_test_string, 0, 100, GFP_KERNEL);
+		radix_test_pj=0;
+		printk("idr=%d\n",err);	
+	}
+	return  n;
+}
+static DEVICE_ATTR_RW(radix);
+
 static struct attribute *rtc_attrs[] = {
 	&dev_attr_name.attr,
 	&dev_attr_date.attr,
@@ -260,6 +300,7 @@ static struct attribute *rtc_attrs[] = {
 	&dev_attr_wakealarm.attr,
 	&dev_attr_offset.attr,
 	&dev_attr_range.attr,
+	&dev_attr_radix.attr,
 	NULL,
 };
 
diff --git a/include/linux/radix-tree.h b/include/linux/radix-tree.h
index f7c1d21c2..2e7b9c337 100644
--- a/include/linux/radix-tree.h
+++ b/include/linux/radix-tree.h
@@ -20,6 +20,7 @@
 #include <linux/types.h>
 #include <linux/xarray.h>
 #include <linux/local_lock.h>
+extern int radix_test_pj;
 
 /* Keep unconverted code working */
 #define radix_tree_root		xarray
diff --git a/lib/radix-tree.c b/lib/radix-tree.c
index b3afafe46..24e53a665 100644
--- a/lib/radix-tree.c
+++ b/lib/radix-tree.c
@@ -282,6 +282,8 @@ radix_tree_node_alloc(gfp_t gfp_mask, struct radix_tree_node *parent,
 		ret->parent = parent;
 		ret->array = root;
 	}
+	if(radix_test_pj)
+		printk("%s %p\n",__func__,ret);
 	return ret;
 }
 
-- 
2.34.1

